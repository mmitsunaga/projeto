DROP TABLE PROC_PARTE_PRISAO;

CREATE TABLE PROJUDI.PROC_PARTE_PRISAO
(	
   ID_PROC_PARTE_PRISAO       NUMBER(24,0)       NOT NULL, 
   ID_PROC_PARTE              NUMBER(24,0)       NOT NULL, 
   DATA_PRISAO                DATE               NOT NULL,
   ID_PRISAO_TIPO             NUMBER(4,0)        NOT NULL,
   ID_LOCAL_CUMP_PENA         NUMBER(24,0)       NULL,
   INFORMOU_FAMILIARES        NUMBER(3,0)        NULL,
   INFORMOU_DEFENSORIA        NUMBER(3,0)        NULL,
   ID_PRISAO_STATUS           NUMBER(10,0)       NULL,
   FATO_GERADOR               VARCHAR2(255 CHAR) NULL,
   NOME_MAGISTRADO            VARCHAR2(255 CHAR) NULL
);

CREATE UNIQUE INDEX PROJUDI.PROC_PARTE_PRISAO_IDX1 ON PROJUDI.PROC_PARTE_PRISAO (ID_PROC_PARTE_PRISAO);

ALTER TABLE PROJUDI.PROC_PARTE_PRISAO ADD CONSTRAINT PK_PROC_PARTE_PRISAO PRIMARY KEY(ID_PROC_PARTE_PRISAO);

CREATE INDEX PROJUDI.PROC_PARTE_PRISAO_IDX2 ON PROJUDI.PROC_PARTE_PRISAO (ID_PROC_PARTE);

ALTER TABLE PROJUDI.PROC_PARTE_PRISAO ADD CONSTRAINT PROCPARTEPRISAO_PROCPARTE_FK FOREIGN KEY (ID_PROC_PARTE) REFERENCES PROJUDI.PROC_PARTE (ID_PROC_PARTE);

CREATE INDEX PROJUDI.PROC_PARTE_PRISAO_IDX3 ON PROJUDI.PROC_PARTE_PRISAO (ID_PRISAO_TIPO);

ALTER TABLE PROJUDI.PROC_PARTE_PRISAO ADD CONSTRAINT PROCPARTEPRISAO_PRISAOTIPO_FK FOREIGN KEY (ID_PRISAO_TIPO) REFERENCES PROJUDI.PRISAO_TIPO (ID_PRISAO_TIPO);

CREATE INDEX PROJUDI.PROC_PARTE_PRISAO_IDX4 ON PROJUDI.PROC_PARTE_PRISAO (ID_LOCAL_CUMP_PENA);

ALTER TABLE PROJUDI.PROC_PARTE_PRISAO ADD CONSTRAINT PROCPARTEPRISAO_CUMPPENA_FK FOREIGN KEY (ID_LOCAL_CUMP_PENA) REFERENCES PROJUDI.LOCAL_CUMP_PENA (ID_LOCAL_CUMP_PENA);

CREATE INDEX PROJUDI.PROC_PARTE_PRISAO_IDX5 ON PROJUDI.PROC_PARTE_PRISAO (ID_PRISAO_STATUS);

ALTER TABLE PROJUDI.PROC_PARTE_PRISAO ADD CONSTRAINT PROCPARTEPRISAO_PRISAOSTATS_FK FOREIGN KEY (ID_PRISAO_STATUS) REFERENCES PROJUDI.PRISAO_STATUS (ID_PRISAO_STATUS);

CREATE SEQUENCE  PROJUDI.PROC_PARTE_PRISAO_ID_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE;

CREATE OR REPLACE TRIGGER PROJUDI.PROC_PARTE_PRISAO_ID_TRG BEFORE INSERT OR UPDATE ON PROC_PARTE_PRISAO
FOR EACH ROW
DECLARE
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_PROC_PARTE_PRISAO IS NULL THEN
    SELECT PROC_PARTE_PRISAO_ID_SEQ.NEXTVAL INTO v_newVal FROM DUAL;
   
   :new.ID_PROC_PARTE_PRISAO := v_newVal;
  END IF;
END;

ALTER TRIGGER PROJUDI.PROC_PARTE_PRISAO_ID_TRG ENABLE;



