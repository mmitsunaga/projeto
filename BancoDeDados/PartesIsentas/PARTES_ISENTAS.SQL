CREATE TABLE PROJUDI.PARTES_ISENTAS (	
	ID_PARTES_ISENTAS           NUMBER(24,0)       NOT NULL, 
	NOME                        VARCHAR2(150 CHAR) NOT NULL,
	CPF                         NUMBER(24),         
	CNPJ                        NUMBER(24),    
	ID_USU_CADASTRADOR          NUMBER(24)         NOT NULL,
	DATA_CADASTRO               DATE               NOT NULL, 
	ID_USU_BAIXA                NUMBER(24),
	DATA_BAIXA                  DATE, 	
	CODIGO_TEMP                 NUMBER(10,0), 
CONSTRAINT PARTES_ISENTAS_PK PRIMARY KEY (ID_PARTES_ISENTAS),
CONSTRAINT PARTESISENTAS_USUSERVCAD FOREIGN KEY (ID_USU_CADASTRADOR) REFERENCES PROJUDI.USU_SERV (ID_USU_SERV) ENABLE,
CONSTRAINT PARTESISENTAS_USUSERVBAIXA FOREIGN KEY (ID_USU_BAIXA) REFERENCES PROJUDI.USU_SERV (ID_USU_SERV) ENABLE);

CREATE OR REPLACE FORCE VIEW PROJUDI.VIEW_PARTES_ISENTAS AS 
  SELECT PIS.ID_PARTES_ISENTAS AS ID_PARTES_ISENTAS,
	PIS.NOME                   AS NOME,
	PIS.CPF                    AS CPF,
	PIS.CNPJ                   AS CNPJ,
	PIS.ID_USU_CADASTRADOR     AS ID_USU_CADASTRADOR,
	UC.NOME                    AS NOME_USU_CADASTRADOR,
	USC.ID_SERV                AS ID_SERV_USU_CADASTRADOR,
	SC.SERV                    AS SERV_USU_CADASTRADOR,
	PIS.DATA_CADASTRO          AS DATA_CADASTRO,
	PIS.ID_USU_BAIXA           AS ID_USU_BAIXA,
	UB.NOME                    AS NOME_USU_BAIXA,
	USB.ID_SERV                AS ID_SERV_USU_BAIXA,
	SB.SERV                    AS SERV_USU_BAIXA,
	PIS.DATA_BAIXA             AS DATA_BAIXA,
	PIS.CODIGO_TEMP            AS CODIGO_TEMP
  FROM PROJUDI.PARTES_ISENTAS PIS
  INNER JOIN PROJUDI.USU_SERV USC ON USC.ID_USU_SERV = PIS.ID_USU_CADASTRADOR
  INNER JOIN PROJUDI.USU UC ON UC.ID_USU = USC.ID_USU_SERV
  INNER JOIN PROJUDI.SERV SC ON SC.ID_SERV = USC.ID_SERV
  LEFT JOIN PROJUDI.USU_SERV USB ON USB.ID_USU_SERV = PIS.ID_USU_BAIXA
  LEFT JOIN PROJUDI.USU UB ON UB.ID_USU = USB.ID_USU_SERV
  LEFT JOIN PROJUDI.SERV SB ON SB.ID_SERV = USB.ID_SERV;

CREATE SEQUENCE  PROJUDI.PARTES_ISENTAS_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE;

CREATE OR REPLACE TRIGGER PROJUDI.PARTES_ISENTAS_ID_TRG BEFORE INSERT OR UPDATE ON PARTES_ISENTAS
FOR EACH ROW
DECLARE
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_PARTES_ISENTAS IS NULL THEN
    SELECT  PARTES_ISENTAS_SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    IF v_newVal = 1 THEN
      SELECT NVL(max(ID_PARTES_ISENTAS),0) INTO v_newVal FROM PARTES_ISENTAS;
      v_newVal := v_newVal + 1;
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT PARTES_ISENTAS_SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;    
   :new.ID_PARTES_ISENTAS := v_newVal;
  END IF;
END;

ALTER TRIGGER PROJUDI.PARTES_ISENTAS_ID_TRG ENABLE;

